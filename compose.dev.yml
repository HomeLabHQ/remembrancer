services:
  db:
    extends:
      file: compose.yml
      service: db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
  minio-client:
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --quiet --api s3v4 local http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc rb --force local/${AWS_STORAGE_BUCKET_NAME}/;
      /usr/bin/mc mb --quiet local/${AWS_STORAGE_BUCKET_NAME}/;
      /usr/bin/mc policy set public local/${AWS_STORAGE_BUCKET_NAME};
      "
    depends_on:
      - minio
volumes:
  postgres_data:
  redis_data:
  minio_data:
